{"ast":null,"code":"import React from'react';import'../styles/Message.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Message=_ref=>{let{message}=_ref;const{role,content,isError}=message;const isUser=role==='user';return/*#__PURE__*/_jsx(\"div\",{className:`message-wrapper ${isUser?'user':'assistant'}`,children:/*#__PURE__*/_jsxs(\"div\",{className:`message ${isUser?'user-message':'assistant-message'} ${isError?'error':''}`,children:[/*#__PURE__*/_jsx(\"span\",{className:\"message-icon\",children:isUser?'ðŸ‘¤':'ðŸ¤–'}),/*#__PURE__*/_jsx(\"div\",{className:\"message-content\",dangerouslySetInnerHTML:{__html:formatContent(content)}})]})});};// Function to format the content\nconst formatContent=content=>{return content.replace(/\\*\\*(.*?)\\*\\*/g,'<strong>$1</strong>')// Bold text\n.replace(/\\*(.*?)\\*/g,'<em>$1</em>')// Italics\n.replace(/^\\s*-\\s+(.*)$/gm,'<li>$1</li>')// List items\n.replace(/<li>(.*?)<\\/li>/g,'<ul><li>$1</li></ul>')// Wrap list items in <ul>\n.replace(/\\n/g,'<br />');// Line breaks\n};export default Message;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","Message","_ref","message","role","content","isError","isUser","className","children","dangerouslySetInnerHTML","__html","formatContent","replace"],"sources":["D:/c09/asd/EPICS2/Health_chatbot/frontend/src/components/Message.js"],"sourcesContent":["import React from 'react';\r\nimport '../styles/Message.css';\r\n\r\nconst Message = ({ message }) => {\r\n  const { role, content, isError } = message;\r\n  const isUser = role === 'user';\r\n  \r\n  return (\r\n    <div className={`message-wrapper ${isUser ? 'user' : 'assistant'}`}>\r\n      <div className={`message ${isUser ? 'user-message' : 'assistant-message'} ${isError ? 'error' : ''}`}>\r\n        <span className=\"message-icon\">\r\n          {isUser ? 'ðŸ‘¤' : 'ðŸ¤–'}\r\n        </span>\r\n        <div className=\"message-content\" dangerouslySetInnerHTML={{ __html: formatContent(content) }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Function to format the content\r\nconst formatContent = (content) => {\r\n  return content\r\n    .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>') // Bold text\r\n    .replace(/\\*(.*?)\\*/g, '<em>$1</em>') // Italics\r\n    .replace(/^\\s*-\\s+(.*)$/gm, '<li>$1</li>') // List items\r\n    .replace(/<li>(.*?)<\\/li>/g, '<ul><li>$1</li></ul>') // Wrap list items in <ul>\r\n    .replace(/\\n/g, '<br />'); // Line breaks\r\n};\r\n\r\nexport default Message; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/B,KAAM,CAAAC,OAAO,CAAGC,IAAA,EAAiB,IAAhB,CAAEC,OAAQ,CAAC,CAAAD,IAAA,CAC1B,KAAM,CAAEE,IAAI,CAAEC,OAAO,CAAEC,OAAQ,CAAC,CAAGH,OAAO,CAC1C,KAAM,CAAAI,MAAM,CAAGH,IAAI,GAAK,MAAM,CAE9B,mBACEN,IAAA,QAAKU,SAAS,CAAE,mBAAmBD,MAAM,CAAG,MAAM,CAAG,WAAW,EAAG,CAAAE,QAAA,cACjET,KAAA,QAAKQ,SAAS,CAAE,WAAWD,MAAM,CAAG,cAAc,CAAG,mBAAmB,IAAID,OAAO,CAAG,OAAO,CAAG,EAAE,EAAG,CAAAG,QAAA,eACnGX,IAAA,SAAMU,SAAS,CAAC,cAAc,CAAAC,QAAA,CAC3BF,MAAM,CAAG,IAAI,CAAG,IAAI,CACjB,CAAC,cACPT,IAAA,QAAKU,SAAS,CAAC,iBAAiB,CAACE,uBAAuB,CAAE,CAAEC,MAAM,CAAEC,aAAa,CAACP,OAAO,CAAE,CAAE,CAAE,CAAC,EAC7F,CAAC,CACH,CAAC,CAEV,CAAC,CAED;AACA,KAAM,CAAAO,aAAa,CAAIP,OAAO,EAAK,CACjC,MAAO,CAAAA,OAAO,CACXQ,OAAO,CAAC,gBAAgB,CAAE,qBAAqB,CAAE;AAAA,CACjDA,OAAO,CAAC,YAAY,CAAE,aAAa,CAAE;AAAA,CACrCA,OAAO,CAAC,iBAAiB,CAAE,aAAa,CAAE;AAAA,CAC1CA,OAAO,CAAC,kBAAkB,CAAE,sBAAsB,CAAE;AAAA,CACpDA,OAAO,CAAC,KAAK,CAAE,QAAQ,CAAC,CAAE;AAC/B,CAAC,CAED,cAAe,CAAAZ,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}